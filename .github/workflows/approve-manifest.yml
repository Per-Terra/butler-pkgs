name: Approve Manifest

on:
  pull_request:
    types: [labeled]

jobs:
  approve_manifest:
    if: github.event.label.name == 'manifest-validated' && github.event.pull_request.user.login == 'butler-pkgs-bot[bot]'
    runs-on: windows-latest
    steps:
      - name: Create comment
        id: couc
        uses: peter-evans/create-or-update-comment@v5
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: This Pull Request will soon be checked and approved automatically if there are no critical changes.

      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Install and cache PowerShell modules
        uses: potatoqualitee/psmodulecache@v6.2.1
        with:
          modules-to-cache: powershell-yaml

      - name: Get Modified Manifests
        id: diff
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.sha }}
        run: |
          $modifiedManifests = git diff --name-only $env:BASE_SHA $env:HEAD_SHA | Where-Object { $_ -like 'manifests/*/*/*.yaml' }
          "modified_manifests=$($modifiedManifests -join ',')" >> $env:GITHUB_OUTPUT

      - name: Check Manifests
        if: steps.diff.outputs.modified_manifests
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.sha }}
          MODIFIED_MANIFESTS: ${{ steps.diff.outputs.modified_manifests }}
        run: |
          $criticalChange = $false
          $previousManifestsDirectory = ''
          foreach ($path in $env:MODIFIED_MANIFESTS -split ',') {
            $manifestsDirectory = Split-Path -Path $path -Parent -Resolve

            if ($previousManifestsDirectory -ne $manifestsDirectory) {
              $previousManifestsDirectory = $manifestsDirectory
              # Checkout to base commit
              git checkout $env:BASE_SHA

              # Get previous manifests
              $previousManifests = Get-ChildItem -LiteralPath $manifestsDirectory -Filter '*.yaml' -Recurse -File | ForEach-Object {
                Get-Content -LiteralPath $_.FullName -Raw | ConvertFrom-Yaml
              }

              # Get latest manifest
              $latestManifest = $previousManifests | Sort-Object -Property @{
                # Sort by ReleaseDate
                Expression = {
                  if ($null -ne $_.ReleaseDate) {
                    [datetime]::ParseExact($_.ReleaseDate, 'yyyy-MM-dd', $null)
                  }
                  else {
                    [datetime]::MinValue
                  }
                }
                Descending = $true
              }, @{
                # Sort by Version
                Expression = {
                  if ($null -ne $_.Version) {
                    $_.Version
                  }
                  else {
                    ''
                  }
                }
                Descending = $true
              } | Select-Object -First 1

              # Checkout to head commit
              git checkout $env:HEAD_SHA
            }

            # Compare manifests
            $criticalChange = $criticalChange -or (& .\tools\CompareManifests.ps1 -FromManifest "$(Join-Path -Path $manifestsDirectory -ChildPath $latestManifest.Version).yaml" -ToManifest $path -ReturnCriticalChange)
          }

          # Set output for critical change status
          if ($criticalChange) {
            'critical_change=true' >> $env:GITHUB_OUTPUT
          } else {
            'critical_change=false' >> $env:GITHUB_OUTPUT
          }

      - name: Approve Pull Request
        if: steps.diff.outputs.modified_manifests && steps.diff.outputs.critical_change != 'true'
        run: gh pr review $env:NUMBER --approve
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NUMBER: ${{ github.event.pull_request.number }}

      - name: Add Label
        if: steps.diff.outputs.modified_manifests
        run: gh pr edit $env:NUMBER --add-label $env:LABELS
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NUMBER: ${{ github.event.pull_request.number }}
          LABELS: ${{ steps.diff.outputs.critical_change == 'true' && 'critical-change' || 'automatically-approved' }}

      - name: Update Comment
        if: steps.diff.outputs.modified_manifests && steps.diff.outputs.critical_change == 'true'
        uses: peter-evans/create-or-update-comment@v5
        with:
          comment-id: ${{ steps.couc.outputs.comment-id }}
          body: |
            This Pull Request has critical changes and cannot be approved automatically.
            Please check logs for details.
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Add Assignees
        if: steps.diff.outputs.modified_manifests && steps.diff.outputs.critical_change == 'true'
        run: gh pr edit $env:NUMBER --add-assignees $env:ASSIGNEES
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NUMBER: ${{ github.event.pull_request.number }}
          ASSIGNEES: Per-Terra
